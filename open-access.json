{"AWSTemplateFormatVersion":"2010-09-09","Description":"Access Server: Adds an EC2 instance and a security group. Installs the latest version of Access Server and provides direct access to Administration Portal **WARNING** This template creates an Amazon EC2 instance. You will be billed for the AWS resources used if you create a stack from this template.","Parameters":{"ActivationKey":{"Description":"Subcription key for the OpenVPN Access Server instance","Type":"String","Default":"ewogICJub25jZSIgOiAiNkQyRERFQUFBNjdBRDY5QjEyNEUxQUJFRkEwOUMwQkU2NzY4OTBDMENBQTlCMDA3MzlCNUFGNTcwM0RDRTJGQyIsCiAgInN1YmtleSIgOiAiQVNVR1lhZG5UVEx6VWptUkV0anVJT0hfQVNtY2V1VHJ2TkJSdHBFQnFGeUxLbmZzU1pMdm1kcnpfYTAyOTQyMjVhMWM0NWYxNDQ5MGFjNWJlM2M3ZWI0ZDYwM2M5YmI3YyIsCiAgImlhdCIgOiAxNzQ4MDg1NTE0Cn0="},"KeyName":{"Description":"Name of an existing EC2 KeyPair to enable SSH access to the instance","Type":"AWS::EC2::KeyPair::KeyName","AllowedPattern":".+","ConstraintDescription":"must be the name of an existing EC2 KeyPair."},"VpcId":{"Type":"AWS::EC2::VPC::Id","Description":"ID of your existing Virtual Private Cloud (VPC)","AllowedPattern":".+","ConstraintDescription":"must be an existing VPC"},"SubnetId":{"Type":"AWS::EC2::Subnet::Id","Description":"ID of public subnet in your Virtual Private Cloud (VPC) - please ensure that the subnet selected is in the above selected VPC or the stack will fail to launch","AllowedPattern":".+","ConstraintDescription":"must be an existing public subnet in selected VPC"},"InstanceType":{"Description":"Access Server EC2 instance type - recommendations (minimum size: t4g.small; light-medium loads: t4g.large; heavy loads: t4g.xlarge) - both AMD64 and ARM64 instance types supported","Type":"String","Default":"t4g.small","AllowedPattern":"\\w+\\.\\w+","ConstraintDescription":"must be a valid EC2 instance type."},"InstanceName":{"Description":"EC2 Instance Name","Type":"String","Default":"OpenVPNAccessServer"}},"Conditions":{"instanceCheck-a1":{"Fn::Equals":[{"Fn::Select":[0,{"Fn::Split":[".",{"Ref":"InstanceType"}]}]},"a1"]},"instanceCheck-c6g":{"Fn::Equals":[{"Fn::Select":[0,{"Fn::Split":[".",{"Ref":"InstanceType"}]}]},"c6g"]},"instanceCheck-c6gd":{"Fn::Equals":[{"Fn::Select":[0,{"Fn::Split":[".",{"Ref":"InstanceType"}]}]},"c6gd"]},"instanceCheck-c6gn":{"Fn::Equals":[{"Fn::Select":[0,{"Fn::Split":[".",{"Ref":"InstanceType"}]}]},"c6gn"]},"instanceCheck-c7g":{"Fn::Equals":[{"Fn::Select":[0,{"Fn::Split":[".",{"Ref":"InstanceType"}]}]},"c7g"]},"instanceCheck-c7gd":{"Fn::Equals":[{"Fn::Select":[0,{"Fn::Split":[".",{"Ref":"InstanceType"}]}]},"c7gd"]},"instanceCheck-c7gn":{"Fn::Equals":[{"Fn::Select":[0,{"Fn::Split":[".",{"Ref":"InstanceType"}]}]},"c7gn"]},"instanceCheck-c8g":{"Fn::Equals":[{"Fn::Select":[0,{"Fn::Split":[".",{"Ref":"InstanceType"}]}]},"c8g"]},"instanceCheck-g5g":{"Fn::Equals":[{"Fn::Select":[0,{"Fn::Split":[".",{"Ref":"InstanceType"}]}]},"g5g"]},"instanceCheck-i4g":{"Fn::Equals":[{"Fn::Select":[0,{"Fn::Split":[".",{"Ref":"InstanceType"}]}]},"i4g"]},"instanceCheck-i8g":{"Fn::Equals":[{"Fn::Select":[0,{"Fn::Split":[".",{"Ref":"InstanceType"}]}]},"i8g"]},"instanceCheck-im4gn":{"Fn::Equals":[{"Fn::Select":[0,{"Fn::Split":[".",{"Ref":"InstanceType"}]}]},"im4gn"]},"instanceCheck-is4gen":{"Fn::Equals":[{"Fn::Select":[0,{"Fn::Split":[".",{"Ref":"InstanceType"}]}]},"is4gen"]},"instanceCheck-m6g":{"Fn::Equals":[{"Fn::Select":[0,{"Fn::Split":[".",{"Ref":"InstanceType"}]}]},"m6g"]},"instanceCheck-m6gd":{"Fn::Equals":[{"Fn::Select":[0,{"Fn::Split":[".",{"Ref":"InstanceType"}]}]},"m6gd"]},"instanceCheck-m7g":{"Fn::Equals":[{"Fn::Select":[0,{"Fn::Split":[".",{"Ref":"InstanceType"}]}]},"m7g"]},"instanceCheck-m7gd":{"Fn::Equals":[{"Fn::Select":[0,{"Fn::Split":[".",{"Ref":"InstanceType"}]}]},"m7gd"]},"instanceCheck-m8g":{"Fn::Equals":[{"Fn::Select":[0,{"Fn::Split":[".",{"Ref":"InstanceType"}]}]},"m8g"]},"instanceCheck-r6g":{"Fn::Equals":[{"Fn::Select":[0,{"Fn::Split":[".",{"Ref":"InstanceType"}]}]},"r6g"]},"instanceCheck-r6gd":{"Fn::Equals":[{"Fn::Select":[0,{"Fn::Split":[".",{"Ref":"InstanceType"}]}]},"r6gd"]},"instanceCheck-r7g":{"Fn::Equals":[{"Fn::Select":[0,{"Fn::Split":[".",{"Ref":"InstanceType"}]}]},"r7g"]},"instanceCheck-r7gd":{"Fn::Equals":[{"Fn::Select":[0,{"Fn::Split":[".",{"Ref":"InstanceType"}]}]},"r7gd"]},"instanceCheck-r8g":{"Fn::Equals":[{"Fn::Select":[0,{"Fn::Split":[".",{"Ref":"InstanceType"}]}]},"r8g"]},"instanceCheck-t4g":{"Fn::Equals":[{"Fn::Select":[0,{"Fn::Split":[".",{"Ref":"InstanceType"}]}]},"t4g"]},"instanceCheck-x2gd":{"Fn::Equals":[{"Fn::Select":[0,{"Fn::Split":[".",{"Ref":"InstanceType"}]}]},"x2gd"]},"instanceCheck-x8g":{"Fn::Equals":[{"Fn::Select":[0,{"Fn::Split":[".",{"Ref":"InstanceType"}]}]},"x8g"]},"IsARMInstance-Set1":{"Fn::Or":[{"Condition":"instanceCheck-a1"},{"Condition":"instanceCheck-c6g"},{"Condition":"instanceCheck-c6gd"},{"Condition":"instanceCheck-c6gn"},{"Condition":"instanceCheck-c7g"},{"Condition":"instanceCheck-c7gd"},{"Condition":"instanceCheck-c7gn"},{"Condition":"instanceCheck-c8g"},{"Condition":"instanceCheck-g5g"},{"Condition":"instanceCheck-i4g"}]},"IsARMInstance-Set2":{"Fn::Or":[{"Condition":"instanceCheck-i8g"},{"Condition":"instanceCheck-im4gn"},{"Condition":"instanceCheck-is4gen"},{"Condition":"instanceCheck-m6g"},{"Condition":"instanceCheck-m6gd"},{"Condition":"instanceCheck-m7g"},{"Condition":"instanceCheck-m7gd"},{"Condition":"instanceCheck-m8g"},{"Condition":"instanceCheck-r6g"},{"Condition":"instanceCheck-r6gd"}]},"IsARMInstance-Set3":{"Fn::Or":[{"Condition":"instanceCheck-r7g"},{"Condition":"instanceCheck-r7gd"},{"Condition":"instanceCheck-r8g"},{"Condition":"instanceCheck-t4g"},{"Condition":"instanceCheck-x2gd"},{"Condition":"instanceCheck-x8g"}]}},"Resources":{"ASLambdaRole":{"Type":"AWS::IAM::Role","Properties":{"AssumeRolePolicyDocument":{"Version":"2012-10-17","Statement":[{"Action":"sts:AssumeRole","Effect":"Allow","Principal":{"Service":"lambda.amazonaws.com"}}]},"ManagedPolicyArns":["arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"]}},"GetASProps":{"Type":"AWS::Lambda::Function","Properties":{"Runtime":"python3.10","Handler":"index.handler","Role":{"Fn::Sub":"${ASLambdaRole.Arn}"},"Timeout":60,"Code":{"ZipFile":"import random\nimport string\nimport cfnresponse\ndef handler(event, context):\n    cfnresponse.send(event, context, cfnresponse.SUCCESS, {'adminPw': ''.join(random.choice(string.ascii_uppercase + string.ascii_lowercase + string.digits) for _ in range(16))})"}}},"ASProps":{"Type":"Custom::ASParams","Properties":{"ServiceToken":{"Fn::Sub":"${GetASProps.Arn}"}}},"AccessServerSecurityGroup":{"Type":"AWS::EC2::SecurityGroup","Properties":{"GroupDescription":"Enable needed access to AS","SecurityGroupIngress":[{"IpProtocol":"tcp","FromPort":943,"ToPort":943,"CidrIp":"0.0.0.0/0"},{"IpProtocol":"tcp","FromPort":945,"ToPort":945,"CidrIp":"0.0.0.0/0"},{"IpProtocol":"tcp","FromPort":443,"ToPort":443,"CidrIp":"0.0.0.0/0"},{"IpProtocol":"udp","FromPort":1194,"ToPort":1194,"CidrIp":"0.0.0.0/0"},{"IpProtocol":"tcp","FromPort":22,"ToPort":22,"CidrIp":"0.0.0.0/0"}],"VpcId":{"Ref":"VpcId"}}},"EC2Instance":{"Type":"AWS::EC2::Instance","Properties":{"InstanceType":{"Ref":"InstanceType"},"SourceDestCheck":false,"KeyName":{"Ref":"KeyName"},"ImageId":{"Fn::If":["IsARMInstance-Set1",{"Fn::Sub":"{{resolve:ssm:/aws/service/canonical/ubuntu/server/24.04/stable/current/arm64/hvm/ebs-gp3/ami-id}}"},{"Fn::If":["IsARMInstance-Set2",{"Fn::Sub":"{{resolve:ssm:/aws/service/canonical/ubuntu/server/24.04/stable/current/arm64/hvm/ebs-gp3/ami-id}}"},{"Fn::If":["IsARMInstance-Set3",{"Fn::Sub":"{{resolve:ssm:/aws/service/canonical/ubuntu/server/24.04/stable/current/arm64/hvm/ebs-gp3/ami-id}}"},{"Fn::Sub":"{{resolve:ssm:/aws/service/canonical/ubuntu/server/24.04/stable/current/amd64/hvm/ebs-gp3/ami-id}}"}]}]}]},"Tags":[{"Key":"Name","Value":{"Ref":"InstanceName"}}],"NetworkInterfaces":[{"AssociatePublicIpAddress":true,"DeviceIndex":"0","GroupSet":[{"Ref":"AccessServerSecurityGroup"}],"SubnetId":{"Ref":"SubnetId"}}],"UserData":{"Fn::Base64":{"Fn::Join":["",["#!/bin/bash\nbash <(curl -fsS https://packages.openvpn.net/as/install.sh) --as-version=2.14.3 --yes\novpn-init --ec2 --batch --force\nwhile [ ! -S /usr/local/openvpn_as/etc/sock/sagent ]; do\nsleep 1\ndone\n/usr/local/openvpn_as/scripts/sacli -k 'vpn.server.daemon.ovpndco' -v 'true' ConfigPut\n/usr/local/openvpn_as/scripts/sacli start\nexit 0\n","license=",{"Ref":"ActivationKey"},"\nadmin_pw=",{"Fn::GetAtt":["ASProps","adminPw"]},"\n"]]}}}}},"Outputs":{"AdminPortal":{"Value":{"Fn::Join":["",["https://",{"Fn::GetAtt":["EC2Instance","PublicIp"]},"/admin/"]]},"Description":"This is the admin UI URL for your OpenVPN Access Server. Since the server is initialized with a self-signed certificate, you will receive a SSL error when the site is initially brought up. You may replace the certificate with a trusted certificate at a later time if you'd like. Note that it generally takes a few minutes before this URL becomes accessible. Once the server is up, please login with the username 'openvpn' and the password listed here."},"TempPassword":{"Value":{"Fn::GetAtt":["ASProps","adminPw"]},"Description":"Temporary password for accessing your server for the 'openvpn' superuser account. Do note that this password is communicated with the instance and is saved inside the machine's metadata information. To ensure this account remains secure, please change your password in the admin web interface in the User Permissions section once your instance is finished provisioning. ***** IMPORTANT: It takes approximately 5 minutes after your stack is created for system initialization to complete. Logging in before this time using this password will likely result in a login failure. *****"}},"Metadata":{"AWS::CloudFormation::Interface":{"ParameterGroups":[{"Label":{"Default":"Access Server Configuration"},"Parameters":["ActivationKey"]},{"Label":{"Default":"Network Configuration"},"Parameters":["VpcId","SubnetId"]},{"Label":{"Default":"EC2 Configuration"},"Parameters":["InstanceName","InstanceType","KeyName"]}],"ParameterLabels":{"ActivationKey":{"Default":"Activation Key"},"VpcId":{"Default":"Choose VPC ID (*)"},"SubnetId":{"Default":"Choose Public Subnet ID (*)"},"InstanceName":{"Default":"Instance Name"},"InstanceType":{"Default":"Instance Type"},"KeyName":{"Default":"Key Pair Name (*)"}}}}}